{"version":3,"sources":["components/ResponsiveNavigation.jsx","components/Chart.jsx","logo.svg","components sync /^/.*/.jsx$","components/Line.jsx","components/PercentageBar.jsx","components/Tree.jsx","store/DashboardReducer.jsx","store/RootReducer.jsx","store/Store.js","pages/Home.jsx","pages/DashboardSelector.jsx","pages/Dashboard.jsx","App.js","serviceWorker.js","index.js","components/EChart.jsx"],"names":["ResponsiveNavigation","background","hoverBackground","linkColor","navLinks","logo","useState","navOpen","setNavOpen","hoverIndex","setHoverIndex","className","style","onClick","src","height","width","alt","map","link","index","key","onMouseEnter","onMouseLeave","to","path","color","text","icon","Chart","config","children","module","exports","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Line","data","reduce","accum","iter","xAxis","push","yAxes","forEach","lineName","colors","option","tooltip","trigger","axisPointer","lineStyle","backgroundColor","padding","textStyle","extraCssText","type","boundaryGap","row","show","interval","margin","fontSize","yAxis","splitLine","axisTick","axisLine","axisLabel","series","trendData","name","yNames","smooth","showSymbol","symbol","symbolSize","areaStyle","normal","echarts","graphic","LinearGradient","offset","itemStyle","PercentageBar","Tree","triggerOn","grid","left","top","bottom","right","label","position","verticalAlign","align","leaves","expandAndCollapse","animationDuration","animationDurationUpdate","initialState","undefined","mutations","SET_DATA","state","json","conf","ind","SET_CONFIG","SET_DASHBOARD_LIST","dashboardList","DashboardReducer","payload","rootReducer","combineReducers","Store","createStore","RootReducer","subscribe","console","log","getState","Home","DashboardSelector","axios","setDashboardList","useEffect","get","then","dashboard","title","description","Dashboard","dashboardName","useSelector","dispatch","useDispatch","endpoint","getData","settings","component","require","default","React","createElement","App","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","EChart","resize","chart","useRef","chartElement","setChartElement","current","init","setOption","ref"],"mappings":"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","file":"static/js/main.9354b096.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nfunction ResponsiveNavigation({\r\n  background,\r\n  hoverBackground,\r\n  linkColor,\r\n  navLinks,\r\n  logo\r\n}) {\r\n  const [navOpen, setNavOpen] = useState(0);\r\n  const [hoverIndex, setHoverIndex] = useState(-1);\r\n  return (\r\n    <nav className=\"responsive-toolbar\" style={{ background: background }}>\r\n      <ul\r\n        style={{ background: background }}\r\n        className={navOpen ? \"active\" : \"\"}\r\n      >\r\n        <figure\r\n          className=\"image-logo\"\r\n          onClick={() => {\r\n            setNavOpen(!navOpen);\r\n          }}\r\n        >\r\n          <img src={logo} height=\"40px\" width=\"40px\" alt=\"toolbar-logo\" />\r\n        </figure>\r\n        {navLinks.map((link, index) => (\r\n          <li\r\n            key={index}\r\n            onMouseEnter={() => {\r\n              setHoverIndex(index);\r\n            }}\r\n            onMouseLeave={() => {\r\n              setHoverIndex(-1);\r\n            }}\r\n            style={{\r\n              background: hoverIndex === index ? hoverBackground || \"#999\" : \"\"\r\n            }}\r\n          >\r\n            <Link to={link.path} style={{ color: linkColor }}>\r\n              {\" \"}\r\n              {link.text}\r\n              <i className={link.icon} />\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default ResponsiveNavigation;\r\n","import React from \"react\";\r\n\r\nexport default function Chart({ config, children }) {\r\n  const { height, width } = config;\r\n\r\n  return <section style={{ height, width }}>{children}</section>;\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var map = {\n\t\"./Chart.jsx\": 136,\n\t\"./EChart.jsx\": 74,\n\t\"./Line.jsx\": 562,\n\t\"./PercentageBar.jsx\": 563,\n\t\"./ResponsiveNavigation.jsx\": 135,\n\t\"./Tree.jsx\": 564\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 266;","import React from \"react\";\r\nimport echarts from \"echarts\";\r\nimport EChart from \"./EChart\";\r\n//import Chart from './Chart'\r\n\r\nexport default function Line({ config }) {\r\n  const { data } = config; // destructuring a property value from an object\r\n\r\n  let { xAxis, yAxes } = data.reduce(\r\n    (accum, iter) => {\r\n      //\r\n      accum.xAxis.push(iter[config.xAxis]);\r\n      config.yAxes.forEach((lineName, index) => {\r\n        if (!accum.yAxes[index]) {\r\n          accum.yAxes.push([iter[config.yAxes[index]]]);\r\n        } else accum.yAxes[index].push(iter[config.yAxes[index]]);\r\n      });\r\n      return accum;\r\n    },\r\n    { xAxis: [], yAxes: [] }\r\n  );\r\n\r\n  let colors = [\r\n    \"#2d8cf0\",\r\n    \"#FFD60A\",\r\n    \"#BF5AF2\",\r\n    \"#FF443A\",\r\n    \"#FF9F0C\",\r\n    \"#31D158\"\r\n  ];\r\n\r\n  let option = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        lineStyle: {\r\n          color: \"#ddd\"\r\n        }\r\n      },\r\n      backgroundColor: \"rgba(255,255,255,1)\",\r\n      padding: [5, 10],\r\n      textStyle: {\r\n        color: \"#7588E4\"\r\n      },\r\n      extraCssText: \"box-shadow: 0 0 5px rgba(0,0,0,0.3)\"\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      data: xAxis,\r\n      boundaryGap: false,\r\n      data: config.data.map(row => row[config.xAxis]),\r\n      splitLine: {\r\n        show: true,\r\n        interval: \"auto\",\r\n        lineStyle: {\r\n          color: [\"#D4DFF5\"]\r\n        }\r\n      },\r\n      axisTick: {\r\n        show: false\r\n      },\r\n      axisLine: {\r\n        lineStyle: {\r\n          color: \"#609ee9\"\r\n        }\r\n      },\r\n      axisLabel: {\r\n        margin: 10,\r\n        textStyle: {\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: [\"#D4DFF5\"]\r\n        }\r\n      },\r\n      axisTick: {\r\n        show: false\r\n      },\r\n      axisLine: {\r\n        lineStyle: {\r\n          color: \"#609ee9\"\r\n        }\r\n      },\r\n      axisLabel: {\r\n        margin: 10,\r\n        textStyle: {\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    series: yAxes.map((trendData, index) => ({\r\n      name: config.yNames[index],\r\n      type: \"line\",\r\n      smooth: true,\r\n      showSymbol: false,\r\n      symbol: \"circle\",\r\n      symbolSize: 6,\r\n      data: trendData,\r\n      areaStyle: {\r\n        normal: {\r\n          color: new echarts.graphic.LinearGradient(\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n            [\r\n              {\r\n                offset: 0,\r\n                color: colors[index]\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: \"rgba(199, 237, 250,0.2)\"\r\n              }\r\n            ],\r\n            false\r\n          )\r\n        }\r\n      },\r\n      itemStyle: {\r\n        normal: {\r\n          color: colors[index]\r\n        }\r\n      },\r\n      lineStyle: {\r\n        normal: {\r\n          width: 3\r\n        }\r\n      }\r\n    }))\r\n  };\r\n\r\n  return <EChart config={option} />;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PercentageBar({ config }) {\r\n  return <div></div>;\r\n}\r\n","import React from \"react\";\r\nimport EChart from \"./EChart\";\r\n\r\nexport default function Tree({ config }) {\r\n  const { data } = config;\r\n\r\n  let option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      triggerOn: \"mousemove\"\r\n    },\r\n    grid: {\r\n      left: \"10%\"\r\n    },\r\n    series: [\r\n      {\r\n        type: \"tree\",\r\n\r\n        data: [data],\r\n\r\n        top: \"1%\",\r\n        left: config.left,\r\n        bottom: \"1%\",\r\n        right: \"20%\",\r\n\r\n        symbolSize: 7,\r\n\r\n        label: {\r\n          normal: {\r\n            position: \"left\",\r\n            verticalAlign: \"middle\",\r\n            align: \"right\",\r\n            fontSize: 9\r\n          }\r\n        },\r\n\r\n        leaves: {\r\n          label: {\r\n            normal: {\r\n              position: \"right\",\r\n              verticalAlign: \"middle\",\r\n              align: \"left\"\r\n            }\r\n          }\r\n        },\r\n\r\n        expandAndCollapse: true,\r\n        animationDuration: 550,\r\n        animationDurationUpdate: 750\r\n      }\r\n    ]\r\n  };\r\n\r\n  return <EChart config={option} />;\r\n}\r\n","const initialState = {\r\n  config: undefined\r\n};\r\n\r\nconst mutations = {\r\n  SET_DATA: (state, [index, json]) => {\r\n    return {\r\n      ...state,\r\n      config: state.config.map((conf, ind) => {\r\n        if (ind === index) conf[\"data\"] = json;\r\n        return conf;\r\n      })\r\n    };\r\n  },\r\n  SET_CONFIG: (state, config) => {\r\n    return {\r\n      ...state,\r\n      config\r\n    };\r\n  },\r\n  SET_DASHBOARD_LIST: (state, dashboardList) => {\r\n    return {\r\n      ...state,\r\n      dashboardList\r\n    };\r\n  }\r\n};\r\n\r\nconst DashboardReducer = (state = initialState, { type, payload }) => {\r\n  if (mutations[type]) {\r\n    return mutations[type](state, payload);\r\n  }\r\n  return { ...state };\r\n};\r\n\r\nexport default DashboardReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport DashboardReducer from \"./DashboardReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  DashboardReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport RootReducer from \"./RootReducer\";\r\n\r\nconst Store = createStore(RootReducer);\r\n\r\nStore.subscribe(() => {\r\n  console.log(\"Store updated: \", Store.getState());\r\n});\r\n\r\nexport default Store;\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return <div>HOME</div>;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nexport default function DashboardSelector({ axios }) {\r\n  const [dashboardList, setDashboardList] = useState(undefined);\r\n  useEffect(() => {\r\n    axios.get(\"/api/dashboard-list\").then(({ data }) => {\r\n      setDashboardList(data);\r\n    });\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <section className=\"dashboard-selector\">\r\n      {dashboardList &&\r\n        dashboardList.map(dashboard => (\r\n          <Link className=\"dashboard-card\" to={dashboard.path}>\r\n            <h3 className=\"dash-title\">{dashboard.title}</h3>\r\n            <p className=\"dash-description\">{dashboard.description}</p>\r\n          </Link>\r\n        ))}\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Chart from \"../components/Chart\";\r\n\r\nexport default function Dashboard({ dashboardName, axios }) {\r\n  const config = useSelector(({ DashboardReducer }) => DashboardReducer.config);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(dashboardName);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/dashboard/${dashboardName}`).then(({ data }) => {\r\n      dispatch({\r\n        type: \"SET_CONFIG\",\r\n        payload: data\r\n      });\r\n      const getData = ({ endpoint }, index) => {\r\n        axios.get(endpoint).then(({ data }) => {\r\n          dispatch({\r\n            type: \"SET_DATA\",\r\n            payload: [index, data]\r\n          });\r\n        });\r\n      };\r\n      data.forEach((config, index) => {\r\n        getData(config, index);\r\n      });\r\n    });\r\n  }, []);\r\n  return (\r\n    <section className=\"dashboard\">\r\n      {config &&\r\n        config.map((settings, index) => {\r\n          const component = require(`../components/${settings.type}.jsx`)\r\n            .default;\r\n          return (\r\n            <Chart config={settings}>\r\n              {settings.data\r\n                ? React.createElement(component, {\r\n                    config: settings,\r\n                    key: index\r\n                  })\r\n                : \"\"}\r\n            </Chart>\r\n          );\r\n        })}{\" \"}\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ResponsiveNavigation from \"./components/ResponsiveNavigation\";\nimport \"./scss/base.scss\";\nimport { Router } from \"@reach/router\";\nimport Home from \"./pages/Home\";\nimport axios from \"axios\";\nimport DashboardSelector from \"./pages/DashboardSelector\";\nimport Dashboard from \"./pages/Dashboard\";\n\nfunction App() {\n  const navLinks = [\n    {\n      text: \"Home\",\n      path: \"/\",\n      icon: \"ion-ios-home\"\n    },\n    {\n      text: \"Analytics\",\n      path: \"/analytics\",\n      icon: \"ion-ios-analytics\"\n    }\n  ];\n  return (\n    <div className=\"App\">\n      <ResponsiveNavigation\n        navLinks={navLinks}\n        logo={logo}\n        background=\"#fff\"\n        hoverBackground=\"#ddd\"\n        linkColor=\"#777\"\n      />\n\n      <Router>\n        <Home path=\"/\" />\n        <DashboardSelector path=\"/analytics\" axios={axios} />\n        <Dashboard path=\"/analytics/:dashboardName\" axios={axios} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/Store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nif (process.env.NODE_ENV === \"development\") {\n  require(\"./mock-endpoints/mock\");\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport echarts from \"echarts\";\r\n\r\nexport default function EChart({ config, resize }) {\r\n  const chart = useRef(null);\r\n  const [chartElement, setChartElement] = useState(chart);\r\n\r\n  //   useEffect(() => {\r\n  //     console.log(chartElement.current);\r\n  //     if (resize) {\r\n  //       chartElement.resize();\r\n  //     }\r\n  //     if (!chartElement.current) {\r\n  //       chartElement.setOption(config);\r\n  //     } else {\r\n  //       setChartElement(echarts.init(chart.current));\r\n  //     }\r\n  //   }, [config, chartElement, resize]);\r\n\r\n  useEffect(() => {\r\n    if (chartElement.current) {\r\n      setChartElement(echarts.init(chartElement.current));\r\n    } else {\r\n      chartElement.setOption(config);\r\n    }\r\n  }, [resize, config, chartElement]);\r\n\r\n  return <div ref={chart} style={{ height: \"100%\", width: \"100%\" }} />;\r\n}\r\n"],"sourceRoot":""}